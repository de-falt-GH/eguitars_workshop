{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-003ce4c9\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"order-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"order\"\n};\nconst _hoisted_3 = {\n  class: \"order-header\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"header-title\"\n}, \"Список заказов\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"row-description\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Описание:\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\" Удалить \");\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_add_order_button = _resolveComponent(\"v-add-order-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_cascader = _resolveComponent(\"el-cascader\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"header\", _hoisted_3, [_hoisted_4, _createVNode(_component_v_add_order_button, {\n    class: \"header-button\",\n    onAddOrder: $options.addOrder\n  }, null, 8 /* PROPS */, [\"onAddOrder\"])]), _createVNode(_component_el_table, {\n    data: $data.orders,\n    stripe: \"\",\n    class: \"order-table\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      type: \"expand\"\n    }, {\n      default: _withCtx(props => [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"p\", null, _toDisplayString($options.getDescription(props.row)), 1 /* TEXT */)])]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      prop: \"id\",\n      label: \"id\",\n      align: \"left\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"clientId\",\n      label: \"id клиента\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"instrument\",\n      label: \"Инструмент\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"Статус\"\n    }, {\n      default: _withCtx(props => [_createVNode(_component_el_cascader, {\n        modelValue: props.row.status.value,\n        \"onUpdate:modelValue\": $event => props.row.status.value = $event,\n        options: $data.statusOption,\n        onChange: $event => $options.updateOption($event, props.row.id)\n      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"options\", \"onChange\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"Дата создания\"\n    }, {\n      default: _withCtx(props => [_createElementVNode(\"span\", null, _toDisplayString($options.getDate(props.row)), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"операции\",\n      align: \"center\",\n      width: \"240px\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_button, {\n        size: \"small\",\n        icon: $options.Delete,\n        type: \"danger\",\n        onClick: $event => $options.deleteOrder(scope.row)\n      }, {\n        default: _withCtx(() => [_hoisted_7]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"icon\", \"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"]), _createVNode(_component_el_pagination, {\n    class: \"order-pagination\",\n    \"onUpdate:currentPage\": $options.updatePage,\n    \"page-size\": $data.page.size,\n    \"pager-count\": 11,\n    layout: \"prev, pager, next\",\n    total: $data.page.total\n  }, null, 8 /* PROPS */, [\"onUpdate:currentPage\", \"page-size\", \"total\"])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_v_add_order_button","onAddOrder","$options","addOrder","_component_el_table","data","$data","orders","stripe","_component_el_table_column","type","default","_withCtx","props","_hoisted_5","_hoisted_6","_toDisplayString","getDescription","row","prop","label","align","_component_el_cascader","status","value","$event","options","statusOption","onChange","updateOption","id","getDate","width","scope","_component_el_button","size","icon","Delete","onClick","deleteOrder","_component_el_pagination","updatePage","page","layout","total"],"sources":["/home/de_falt/Code/Java/Курсовая/eguitars_workshop/front/src/views/OrderView.vue"],"sourcesContent":["<template>\r\n    <div class=\"order-wrapper\">\r\n        <div class=\"order\">\r\n            <header class=\"order-header\">\r\n                <h2 class=\"header-title\">Список заказов</h2>\r\n                <v-add-order-button class=\"header-button\" @addOrder=\"addOrder\"/>\r\n            </header>\r\n            <el-table :data=\"orders\" stripe class=\"order-table\">\r\n                <el-table-column type=\"expand\">\r\n                    <template #default=\"props\">\r\n                        <div class=\"row-description\">\r\n                            <h3>Описание:</h3>\r\n                            <p>{{ getDescription(props.row) }}</p>\r\n                        </div>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"id\" label=\"id\" align=\"left\"/>\r\n                <el-table-column prop=\"clientId\" label=\"id клиента\"/>\r\n                <el-table-column prop=\"instrument\" label=\"Инструмент\"/>\r\n                <el-table-column label=\"Статус\">\r\n                    <template #default=\"props\">\r\n                        <el-cascader v-model=\"props.row.status.value\" :options=\"statusOption\" @change=\"updateOption($event, props.row.id)\"/>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"Дата создания\">\r\n                    <template #default=\"props\">\r\n                        <span>{{ getDate(props.row) }}</span>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"операции\" align=\"center\" width=\"240px\">\r\n                    <template #default=\"scope\">\r\n                        <el-button\r\n                                size=\"small\"\r\n                                :icon=\"Delete\"\r\n                                type=\"danger\"\r\n                                @click=\"deleteOrder(scope.row)\"\r\n                        >\r\n                            Удалить\r\n                        </el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <el-pagination\r\n                    class=\"order-pagination\"\r\n                    @update:current-page=\"updatePage\"\r\n                    :page-size=\"page.size\"\r\n                    :pager-count=\"11\"\r\n                    layout=\"prev, pager, next\"\r\n                    :total=\"page.total\"\r\n            />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport orders from \"@/api/orders\";\r\nimport VAddOrderButton from \"@/components/VAddOrderButton.vue\";\r\nimport {Delete} from \"@element-plus/icons-vue\";\r\n\r\nexport default {\r\n    name: \"OrderView\",\r\n    computed: {\r\n        Delete() {\r\n            return Delete\r\n        }\r\n    },\r\n    components: {VAddOrderButton},\r\n    data() {\r\n        return {\r\n            page: {\r\n                size: 20,\r\n                total: 400,\r\n                current: 1\r\n            },\r\n            orders: [],\r\n            statusOption: []\r\n        }\r\n    },\r\n    methods: {\r\n        updatePage(val) {\r\n            this.orders = orders.get(val, this.page.size)\r\n            this.current = val\r\n        },\r\n        getDescription(row) {\r\n            return row.description\r\n        },\r\n        getDate(row) {\r\n          return row.date\r\n            // return row.date.toLocaleString()\r\n        },\r\n        deleteOrder(row) {\r\n            orders.delete(row.id)\r\n            setTimeout(()=> {\r\n                  this.updatePage(this.page.current)\r\n                }, 10\r\n            )\r\n        },\r\n        updateOption(newStatus, id){\r\n            orders.updateOption(id, newStatus)\r\n        },\r\n        addOrder(order){\r\n            orders.add(order)\r\n            setTimeout(()=> {\r\n                  this.updatePage(this.page.current)\r\n                }, 10\r\n            )\r\n        }\r\n    },\r\n    created() {\r\n        this.orders = orders.get(1, this.page.size)\r\n        this.statusOption = orders.getStatuses()\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.order-wrapper {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.order-header {\r\n    margin: 20px 0;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.header-title {\r\n    margin-left: auto;\r\n}\r\n\r\n.header-button {\r\n    margin-left: auto;\r\n}\r\n\r\n.order {\r\n    width: 100%;\r\n    max-width: 1800px;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.order-pagination {\r\n    margin-top: 20px;\r\n}\r\n\r\n.order-table {\r\n    flex-grow: 1;\r\n}\r\n\r\n.row-description {\r\n    margin-left: 40px;\r\n}\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAe;;EACjBA,KAAK,EAAC;AAAO;;EACNA,KAAK,EAAC;AAAc;gEACxBC,mBAAA,CAA4C;EAAxCD,KAAK,EAAC;AAAc,GAAC,gBAAc;;EAM1BA,KAAK,EAAC;AAAiB;gEACxBC,mBAAA,CAAkB,YAAd,WAAS;iDAyBhB,WAED;;;;;;;;uBArCpBC,mBAAA,CAkDM,OAlDNC,UAkDM,GAjDFF,mBAAA,CAgDM,OAhDNG,UAgDM,GA/CFH,mBAAA,CAGS,UAHTI,UAGS,GAFLC,UAA4C,EAC5CC,YAAA,CAAgEC,6BAAA;IAA5CR,KAAK,EAAC,eAAe;IAAES,UAAQ,EAAEC,QAAA,CAAAC;6CAEzDJ,YAAA,CAkCWK,mBAAA;IAlCAC,IAAI,EAAEC,KAAA,CAAAC,MAAM;IAAEC,MAAM,EAAN,EAAM;IAAChB,KAAK,EAAC;;sBAClC,MAOkB,CAPlBO,YAAA,CAOkBU,0BAAA;MAPDC,IAAI,EAAC;IAAQ;MACfC,OAAO,EAAAC,QAAA,CAAEC,KAAK,KACrBpB,mBAAA,CAGM,OAHNqB,UAGM,GAFFC,UAAkB,EAClBtB,mBAAA,CAAsC,WAAAuB,gBAAA,CAAhCd,QAAA,CAAAe,cAAc,CAACJ,KAAK,CAACK,GAAG,kB;;;QAI1CnB,YAAA,CAAoDU,0BAAA;MAAnCU,IAAI,EAAC,IAAI;MAACC,KAAK,EAAC,IAAI;MAACC,KAAK,EAAC;QAC5CtB,YAAA,CAAqDU,0BAAA;MAApCU,IAAI,EAAC,UAAU;MAACC,KAAK,EAAC;QACvCrB,YAAA,CAAuDU,0BAAA;MAAtCU,IAAI,EAAC,YAAY;MAACC,KAAK,EAAC;QACzCrB,YAAA,CAIkBU,0BAAA;MAJDW,KAAK,EAAC;IAAQ;MAChBT,OAAO,EAAAC,QAAA,CAAEC,KAAK,KACrBd,YAAA,CAAoHuB,sBAAA;oBAA9FT,KAAK,CAACK,GAAG,CAACK,MAAM,CAACC,KAAK;yCAAtBX,KAAK,CAACK,GAAG,CAACK,MAAM,CAACC,KAAK,GAAAC,MAAA;QAAGC,OAAO,EAAEpB,KAAA,CAAAqB,YAAY;QAAGC,QAAM,EAAAH,MAAA,IAAEvB,QAAA,CAAA2B,YAAY,CAACJ,MAAM,EAAEZ,KAAK,CAACK,GAAG,CAACY,EAAE;;;QAGxH/B,YAAA,CAIkBU,0BAAA;MAJDW,KAAK,EAAC;IAAe;MACvBT,OAAO,EAAAC,QAAA,CAAEC,KAAK,KACrBpB,mBAAA,CAAqC,cAAAuB,gBAAA,CAA5Bd,QAAA,CAAA6B,OAAO,CAAClB,KAAK,CAACK,GAAG,kB;;;QAGlCnB,YAAA,CAWkBU,0BAAA;MAXDW,KAAK,EAAC,UAAU;MAACC,KAAK,EAAC,QAAQ;MAACW,KAAK,EAAC;;MACxCrB,OAAO,EAAAC,QAAA,CAAEqB,KAAK,KACrBlC,YAAA,CAOYmC,oBAAA;QANJC,IAAI,EAAC,OAAO;QACXC,IAAI,EAAElC,QAAA,CAAAmC,MAAM;QACb3B,IAAI,EAAC,QAAQ;QACZ4B,OAAK,EAAAb,MAAA,IAAEvB,QAAA,CAAAqC,WAAW,CAACN,KAAK,CAACf,GAAG;;0BACpC,MAED,C;;;;;;;+BAIZnB,YAAA,CAOEyC,wBAAA;IANMhD,KAAK,EAAC,kBAAkB;IACvB,sBAAmB,EAAEU,QAAA,CAAAuC,UAAU;IAC/B,WAAS,EAAEnC,KAAA,CAAAoC,IAAI,CAACP,IAAI;IACpB,aAAW,EAAE,EAAE;IAChBQ,MAAM,EAAC,mBAAmB;IACzBC,KAAK,EAAEtC,KAAA,CAAAoC,IAAI,CAACE"},"metadata":{},"sourceType":"module","externalDependencies":[]}