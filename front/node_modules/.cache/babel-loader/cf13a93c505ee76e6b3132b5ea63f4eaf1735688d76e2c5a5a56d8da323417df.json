{"ast":null,"code":"import orders from \"@/api/orders\";\nimport VAddOrderButton from \"@/components/VAddOrderButton.vue\";\nimport { Delete } from \"@element-plus/icons-vue\";\nexport default {\n  name: \"OrderView\",\n  computed: {\n    Delete() {\n      return Delete;\n    }\n  },\n  components: {\n    VAddOrderButton\n  },\n  data() {\n    return {\n      page: {\n        size: 20,\n        total: 400,\n        current: 1\n      },\n      orders: [],\n      statusOption: []\n    };\n  },\n  methods: {\n    updatePage(val) {\n      this.orders = orders.get(val, this.page.size);\n      this.current = val;\n    },\n    getDescription(row) {\n      return row.description;\n    },\n    getDate(row) {\n      return row.date;\n      // return row.date.toLocaleString()\n    },\n\n    deleteOrder(row) {\n      orders.delete(row.id);\n      setTimeout(() => {\n        this.updatePage(this.page.current);\n      }, 10);\n    },\n    updateOption(newStatus, id) {\n      orders.updateOption(id, newStatus);\n    },\n    addOrder(order) {\n      orders.add(order);\n      setTimeout(() => {\n        this.updatePage(this.page.current);\n      }, 10);\n    }\n  },\n  created() {\n    this.orders = orders.get(1, this.page.size);\n    this.statusOption = orders.getStatuses();\n  }\n};","map":{"version":3,"names":["orders","VAddOrderButton","Delete","name","computed","components","data","page","size","total","current","statusOption","methods","updatePage","val","get","getDescription","row","description","getDate","date","deleteOrder","delete","id","setTimeout","updateOption","newStatus","addOrder","order","add","created","getStatuses"],"sources":["/home/de_falt/Code/Java/Курсовая/eguitars_workshop/front/src/views/OrderView.vue"],"sourcesContent":["<template>\r\n    <div class=\"order-wrapper\">\r\n        <div class=\"order\">\r\n            <header class=\"order-header\">\r\n                <h2 class=\"header-title\">Список заказов</h2>\r\n                <v-add-order-button class=\"header-button\" @addOrder=\"addOrder\"/>\r\n            </header>\r\n            <el-table :data=\"orders\" stripe class=\"order-table\">\r\n                <el-table-column type=\"expand\">\r\n                    <template #default=\"props\">\r\n                        <div class=\"row-description\">\r\n                            <h3>Описание:</h3>\r\n                            <p>{{ getDescription(props.row) }}</p>\r\n                        </div>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"id\" label=\"id\" align=\"left\"/>\r\n                <el-table-column prop=\"clientId\" label=\"id клиента\"/>\r\n                <el-table-column prop=\"instrument\" label=\"Инструмент\"/>\r\n                <el-table-column label=\"Статус\">\r\n                    <template #default=\"props\">\r\n                        <el-cascader v-model=\"props.row.status.value\" :options=\"statusOption\" @change=\"updateOption($event, props.row.id)\"/>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"Дата создания\">\r\n                    <template #default=\"props\">\r\n                        <span>{{ getDate(props.row) }}</span>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"операции\" align=\"center\" width=\"240px\">\r\n                    <template #default=\"scope\">\r\n                        <el-button\r\n                                size=\"small\"\r\n                                :icon=\"Delete\"\r\n                                type=\"danger\"\r\n                                @click=\"deleteOrder(scope.row)\"\r\n                        >\r\n                            Удалить\r\n                        </el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <el-pagination\r\n                    class=\"order-pagination\"\r\n                    @update:current-page=\"updatePage\"\r\n                    :page-size=\"page.size\"\r\n                    :pager-count=\"11\"\r\n                    layout=\"prev, pager, next\"\r\n                    :total=\"page.total\"\r\n            />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport orders from \"@/api/orders\";\r\nimport VAddOrderButton from \"@/components/VAddOrderButton.vue\";\r\nimport {Delete} from \"@element-plus/icons-vue\";\r\n\r\nexport default {\r\n    name: \"OrderView\",\r\n    computed: {\r\n        Delete() {\r\n            return Delete\r\n        }\r\n    },\r\n    components: {VAddOrderButton},\r\n    data() {\r\n        return {\r\n            page: {\r\n                size: 20,\r\n                total: 400,\r\n                current: 1\r\n            },\r\n            orders: [],\r\n            statusOption: []\r\n        }\r\n    },\r\n    methods: {\r\n        updatePage(val) {\r\n            this.orders = orders.get(val, this.page.size)\r\n            this.current = val\r\n        },\r\n        getDescription(row) {\r\n            return row.description\r\n        },\r\n        getDate(row) {\r\n          return row.date\r\n            // return row.date.toLocaleString()\r\n        },\r\n        deleteOrder(row) {\r\n            orders.delete(row.id)\r\n            setTimeout(()=> {\r\n                  this.updatePage(this.page.current)\r\n                }, 10\r\n            )\r\n        },\r\n        updateOption(newStatus, id){\r\n            orders.updateOption(id, newStatus)\r\n        },\r\n        addOrder(order){\r\n            orders.add(order)\r\n            setTimeout(()=> {\r\n                  this.updatePage(this.page.current)\r\n                }, 10\r\n            )\r\n        }\r\n    },\r\n    created() {\r\n        this.orders = orders.get(1, this.page.size)\r\n        this.statusOption = orders.getStatuses()\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.order-wrapper {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.order-header {\r\n    margin: 20px 0;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.header-title {\r\n    margin-left: auto;\r\n}\r\n\r\n.header-button {\r\n    margin-left: auto;\r\n}\r\n\r\n.order {\r\n    width: 100%;\r\n    max-width: 1800px;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.order-pagination {\r\n    margin-top: 20px;\r\n}\r\n\r\n.order-table {\r\n    flex-grow: 1;\r\n}\r\n\r\n.row-description {\r\n    margin-left: 40px;\r\n}\r\n</style>"],"mappings":"AAuDA,OAAOA,MAAK,MAAO,cAAc;AACjC,OAAOC,eAAc,MAAO,kCAAkC;AAC9D,SAAQC,MAAM,QAAO,yBAAyB;AAE9C,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE;IACNF,MAAMA,CAAA,EAAG;MACL,OAAOA,MAAK;IAChB;EACJ,CAAC;EACDG,UAAU,EAAE;IAACJ;EAAe,CAAC;EAC7BK,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;QACFC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,GAAG;QACVC,OAAO,EAAE;MACb,CAAC;MACDV,MAAM,EAAE,EAAE;MACVW,YAAY,EAAE;IAClB;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,UAAUA,CAACC,GAAG,EAAE;MACZ,IAAI,CAACd,MAAK,GAAIA,MAAM,CAACe,GAAG,CAACD,GAAG,EAAE,IAAI,CAACP,IAAI,CAACC,IAAI;MAC5C,IAAI,CAACE,OAAM,GAAII,GAAE;IACrB,CAAC;IACDE,cAAcA,CAACC,GAAG,EAAE;MAChB,OAAOA,GAAG,CAACC,WAAU;IACzB,CAAC;IACDC,OAAOA,CAACF,GAAG,EAAE;MACX,OAAOA,GAAG,CAACG,IAAG;MACZ;IACJ,CAAC;;IACDC,WAAWA,CAACJ,GAAG,EAAE;MACbjB,MAAM,CAACsB,MAAM,CAACL,GAAG,CAACM,EAAE;MACpBC,UAAU,CAAC,MAAK;QACV,IAAI,CAACX,UAAU,CAAC,IAAI,CAACN,IAAI,CAACG,OAAO;MACnC,CAAC,EAAE,EACP;IACJ,CAAC;IACDe,YAAYA,CAACC,SAAS,EAAEH,EAAE,EAAC;MACvBvB,MAAM,CAACyB,YAAY,CAACF,EAAE,EAAEG,SAAS;IACrC,CAAC;IACDC,QAAQA,CAACC,KAAK,EAAC;MACX5B,MAAM,CAAC6B,GAAG,CAACD,KAAK;MAChBJ,UAAU,CAAC,MAAK;QACV,IAAI,CAACX,UAAU,CAAC,IAAI,CAACN,IAAI,CAACG,OAAO;MACnC,CAAC,EAAE,EACP;IACJ;EACJ,CAAC;EACDoB,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC9B,MAAK,GAAIA,MAAM,CAACe,GAAG,CAAC,CAAC,EAAE,IAAI,CAACR,IAAI,CAACC,IAAI;IAC1C,IAAI,CAACG,YAAW,GAAIX,MAAM,CAAC+B,WAAW,CAAC;EAC3C;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}