{"ast":null,"code":"import clients from \"@/api/clients\";\nimport VAddClientButton from \"@/components/VAddClinetButton.vue\";\nimport { Delete } from \"@element-plus/icons-vue\";\nexport default {\n  name: \"ClientView\",\n  computed: {\n    Delete() {\n      return Delete;\n    }\n  },\n  components: {\n    VAddClientButton\n  },\n  data() {\n    return {\n      page: {\n        size: 20,\n        total: 400,\n        current: 1\n      },\n      clients: []\n    };\n  },\n  methods: {\n    updatePage(val) {\n      this.clients = clients.get(val, this.page.size);\n      this.page.current = val;\n    },\n    deleteClient(row) {\n      clients.delete(row.id);\n      setTimeout(() => {\n        this.updatePage(this.page.current);\n      }, 10);\n    },\n    getOneOrder(row) {\n      return row.orders[0] ?? 'Нет заказов';\n    },\n    getOrderList(row) {\n      if (row.orders.length === 0) {\n        return 'Нет заказов';\n      }\n      return `Заказы: ${row.orders.join(', ')}`;\n    },\n    addClient(client) {\n      clients.addClient(client);\n      setTimeout(() => {\n        this.updatePage(this.page.current);\n      }, 10);\n    }\n  },\n  created() {\n    this.clients = clients.get(1, this.page.size);\n  }\n};","map":{"version":3,"names":["clients","VAddClientButton","Delete","name","computed","components","data","page","size","total","current","methods","updatePage","val","get","deleteClient","row","delete","id","setTimeout","getOneOrder","orders","getOrderList","length","join","addClient","client","created"],"sources":["/home/de_falt/Code/Java/Курсовая/eguitars_workshop/front/src/views/ClientView.vue"],"sourcesContent":["<template>\r\n    <div class=\"client-wrapper\">\r\n        <div class=\"client\">\r\n            <header class=\"client-header\">\r\n                <h2 class=\"header-title\">Список клиентов</h2>\r\n                <v-add-client-button class=\"header-button\" @addClient=\"addClient\"/>\r\n            </header>\r\n            <el-table :data=\"clients\" stripe class=\"client-table\">\r\n                <el-table-column type=\"expand\">\r\n                    <template #default=\"props\">\r\n                        <p class=\"table-row\">{{ getOrderList(props.row) }}</p>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"id\" label=\"id\" align=\"left\"/>\r\n                <el-table-column prop=\"name\" label=\"ФИО\"/>\r\n                <el-table-column prop=\"telephone\" label=\"телефон\"/>\r\n                <el-table-column label=\"последний заказ\">\r\n                    <template #default=\"scope\">\r\n                        <p>{{ getOneOrder(scope.row) }}</p>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"операции\" align=\"center\" width=\"100px\">\r\n                    <template #default=\"scope\">\r\n                        <el-button\r\n                                size=\"small\"\r\n                                :icon=\"Delete\"\r\n                                type=\"danger\"\r\n                                @click=\"deleteClient(scope.row)\"\r\n                        >\r\n                            Удалить\r\n                        </el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <el-pagination\r\n                    class=\"client-pagination\"\r\n                    @update:current-page=\"updatePage\"\r\n                    :page-size=\"page.size\"\r\n                    :pager-count=\"11\"\r\n                    layout=\"prev, pager, next\"\r\n                    :total=\"page.total\"\r\n            />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport clients from \"@/api/clients\";\r\nimport VAddClientButton from \"@/components/VAddClinetButton.vue\";\r\nimport {Delete} from \"@element-plus/icons-vue\";\r\n\r\nexport default {\r\n    name: \"ClientView\",\r\n    computed: {\r\n        Delete() {\r\n            return Delete\r\n        }\r\n    },\r\n    components: {VAddClientButton},\r\n    data() {\r\n        return {\r\n            page: {\r\n                size: 20,\r\n                total: 400,\r\n                current: 1\r\n            },\r\n            clients: []\r\n        }\r\n    },\r\n    methods: {\r\n        updatePage(val) {\r\n            this.clients = clients.get(val, this.page.size)\r\n            this.page.current = val\r\n        },\r\n        deleteClient(row) {\r\n            clients.delete(row.id)\r\n            setTimeout(()=> {\r\n              this.updatePage(this.page.current)\r\n            }, 10\r\n            )\r\n        },\r\n        getOneOrder(row) {\r\n            return row.orders[0] ?? 'Нет заказов'\r\n        },\r\n        getOrderList(row) {\r\n            if (row.orders.length === 0) {\r\n                return 'Нет заказов'\r\n            }\r\n            return `Заказы: ${row.orders.join(', ')}`\r\n        },\r\n\r\n        addClient(client) {\r\n          clients.addClient(client)\r\n          setTimeout(()=> {\r\n                this.updatePage(this.page.current)\r\n              }, 10\r\n          )\r\n        }\r\n    },\r\n    created() {\r\n        this.clients = clients.get(1, this.page.size)\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.client-wrapper {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.client-header {\r\n    margin: 20px 0;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.header-title {\r\n    margin-left: auto;\r\n}\r\n\r\n.header-button {\r\n    margin-left: auto;\r\n}\r\n\r\n.client {\r\n    width: 100%;\r\n    max-width: 1800px;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.client-pagination {\r\n    margin-top: 20px;\r\n}\r\n\r\n.client-table {\r\n    flex-grow: 1;\r\n}\r\n\r\n.table-row {\r\n    margin-left: 40px;\r\n}\r\n</style>"],"mappings":"AAgDA,OAAOA,OAAM,MAAO,eAAe;AACnC,OAAOC,gBAAe,MAAO,mCAAmC;AAChE,SAAQC,MAAM,QAAO,yBAAyB;AAE9C,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,QAAQ,EAAE;IACNF,MAAMA,CAAA,EAAG;MACL,OAAOA,MAAK;IAChB;EACJ,CAAC;EACDG,UAAU,EAAE;IAACJ;EAAgB,CAAC;EAC9BK,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;QACFC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,GAAG;QACVC,OAAO,EAAE;MACb,CAAC;MACDV,OAAO,EAAE;IACb;EACJ,CAAC;EACDW,OAAO,EAAE;IACLC,UAAUA,CAACC,GAAG,EAAE;MACZ,IAAI,CAACb,OAAM,GAAIA,OAAO,CAACc,GAAG,CAACD,GAAG,EAAE,IAAI,CAACN,IAAI,CAACC,IAAI;MAC9C,IAAI,CAACD,IAAI,CAACG,OAAM,GAAIG,GAAE;IAC1B,CAAC;IACDE,YAAYA,CAACC,GAAG,EAAE;MACdhB,OAAO,CAACiB,MAAM,CAACD,GAAG,CAACE,EAAE;MACrBC,UAAU,CAAC,MAAK;QACd,IAAI,CAACP,UAAU,CAAC,IAAI,CAACL,IAAI,CAACG,OAAO;MACnC,CAAC,EAAE,EACH;IACJ,CAAC;IACDU,WAAWA,CAACJ,GAAG,EAAE;MACb,OAAOA,GAAG,CAACK,MAAM,CAAC,CAAC,KAAK,aAAY;IACxC,CAAC;IACDC,YAAYA,CAACN,GAAG,EAAE;MACd,IAAIA,GAAG,CAACK,MAAM,CAACE,MAAK,KAAM,CAAC,EAAE;QACzB,OAAO,aAAY;MACvB;MACA,OAAQ,WAAUP,GAAG,CAACK,MAAM,CAACG,IAAI,CAAC,IAAI,CAAE;IAC5C,CAAC;IAEDC,SAASA,CAACC,MAAM,EAAE;MAChB1B,OAAO,CAACyB,SAAS,CAACC,MAAM;MACxBP,UAAU,CAAC,MAAK;QACV,IAAI,CAACP,UAAU,CAAC,IAAI,CAACL,IAAI,CAACG,OAAO;MACnC,CAAC,EAAE,EACP;IACF;EACJ,CAAC;EACDiB,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC3B,OAAM,GAAIA,OAAO,CAACc,GAAG,CAAC,CAAC,EAAE,IAAI,CAACP,IAAI,CAACC,IAAI;EAEhD;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}